name: "Release GitHub"
on:
  push:
    tags:
      - "**"

env:
  PLUGIN_NAME: obsidian-plugin-s3-link

jobs:
  release-github:
    runs-on: ubuntu-latest
    name: GitHub Release
    steps:
      - name: "Release Tag"
        run: "echo \"RELEASE_TAG=${GITHUB_REF#refs/tags/}\" >> $GITHUB_ENV"
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          npm install
          npm run build
          mkdir ${{ env.PLUGIN_NAME }}
          cp main.js manifest.json ${{ env.PLUGIN_NAME }}
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
          ls
          cho "{tag_name}={$(git tag --sort version:refname | tail -n 1)}" >> $GITHUB_OUTPUT
      - name: "Create release"
        uses: "actions/github-script@v6"
        with:
            github-token: "${{ secrets.GITHUB_TOKEN }}"
            script: |
              try {
                const response = await github.rest.repos.createRelease({
                  draft: false,
                  generate_release_notes: true,
                  name: process.env.RELEASE_TAG,
                  owner: context.repo.owner,
                  prerelease: false,
                  repo: context.repo.repo,
                  tag_name: process.env.RELEASE_TAG,
                });

                core.exportVariable('RELEASE_ID', response.data.id);
                core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
              } catch (error) {
                core.setFailed(error.message);
              }
